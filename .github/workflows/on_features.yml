name: Pruebas unitarias1
on:
  push:
    branches: "**Features"
jobs:
  job1:
    name: Mezclar desarrollo -> ${{ github.ref_name }}
    if: ${{ contains(github.event.head_commit.message, 'terminada') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout a rama release
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Mezcla desarrollo -> ${{ github.ref_name }}
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: desarrollo
          target-branch: ${{ github.ref }}
  job2:
    name: Pruebas Unitarias
    runs-on: ubuntu-latest
    needs: job2
    outputs:
      salida: ${{ steps.imprimir.outputs.respuesta }}
    steps:
      - name: Checkout de repositorio
        uses: actions/checkout@v2
      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Instalación de librerías y dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Correr pruebas
        id: correr-pruebas
        run: python -m unittest discover -s tests -v
      - name: Validar resultado con errores
        if: ${{ failure() }}
        env:
          MENSAJE_ERROR: Una o varias pruebas fallaron
        run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        env:
          MENSAJE_EXITO: Todas las pruebas fueron exitosas
        run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
      - name: Cálculo de cubrimiento
        id: cubrimiento
        run: |
          coverage run -m unittest discover -s tests -v
          coverage report -m
  job3:
    name: Mezclar ${{ github.ref_name }} -> desarrollo
    runs-on: ubuntu-latest
    needs: job2
    steps:
      - name: Mezcla desarrollo -> ${{ github.ref_name }}
        uses: tukasz/direct-merge-action@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          source-branch: ${{ github.ref }}
          target-branch: desarrollo
